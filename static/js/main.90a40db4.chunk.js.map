{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/Pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/Pages/NotFound.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","class","href","Branding","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","marginRight","ProTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","string","laabel","func","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","Test","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","textAlign","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90a40db4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div class=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.Branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nHeader.defaultProps = {\r\n  Branding: \"My App\"\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                {\"\"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  //onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  onClick={() => this.onDeleteClick(id, dispatch)}\r\n                />\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email Address:{email}</li>\r\n                  <li className=\"list-group-item\">Phone Number: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.ProTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\" text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\n//className=\"display-4\">{props.match.params.id}\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact manager</h1>\r\n      <p className=\"lead\"> Simple App to manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        type={type}\r\n        className={classnames(\" form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.PropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  laabel: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //Check field for error\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      //id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { uptime } from \"os\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //Check field for error\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Eidt Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 </span>page not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\"\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          name: data.name,\r\n          email: data.email\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { name, email } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">Test Component</h1>\r\n        <h1>{name}</h1>\r\n        <p>{email}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/Pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport NotFound from \"./components/Pages/NotFound\";\nimport Test from \"./components/Test/Test\";\n//exact path=\"/about/:id\" component={About}\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header Branding=\"Contact Manager\" />\n            <div className=\"container\" style={{ textAlign: \"left\" }}>\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/Test\" component={Test} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}